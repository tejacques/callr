var hubModule=function(){var e=function(e){var t=$.connection[e];var n=t.server;t.subscriptions={};t.bindEvent=t.on;t.unbindEvent=t.off;t.connect=function(e,t){return $.connection.hub.start(e,t)};t.disconnect=function(e,t){return $.connection.hub.stop(e,t)};var r=[];t.queueRequest=function(e){var t=$.Deferred();r.push([e,t]);return t.promise()};t.flushRequests=function(e){function o(e,t){e().done(function(e){if(t){t.resolve(e)}s()}).fail(function(e){if(t){t.reject(e)}s()})}var n=r.length;if(n===0){t.connection.log("No requests to flush");return}t.connection.log("Flushing request queue");var i=false;if($.connection.hub.state===$.signalR.connectionState.disconnected){i=true}var s=function(){n--;if(n===0){t.connection.log("Finished flushing request queue");if(i){t.stop()}if(e){e()}}};t.connect().done(function(){var e=r.length;for(var t=0;t<e;t++){o(r[t][0],r[t][1])}r=[]})};t.request=function(e){t.flushRequests();return e};for(var i in t.server){t.api=t.api||{};t.queueApi=t.queueApi||{};if(t.server.hasOwnProperty(i)){t.api[i]=function(e){return function(){var n=t.server[e].apply(this,arguments);return t.request(n)}}(i);t.queueApi[i]=function(e){return function(){var n=function(){return t.server[e].apply(this,arguments)};return t.queueRequest(n)}}(i)}}return t};return{init:e}}()
