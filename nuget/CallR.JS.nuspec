<?xml version="1.0"?>
<package>
  <metadata>
    <id>CallR.JS</id>
    <version>1.0.1</version>
    <title>CallR.JS</title>
    <authors>Tom Jacques</authors>
    <owners>Tom Jacques</owners>
    <licenseUrl>https://github.com/tejacques/callr/blob/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/tejacques/callr</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
        JavaScript files for the CallR library.
        Visit https://github.com/tejacques/callr for an overview and usage examples.
    </description>
    <summary>
        An open source helper library for SignalR.
    </summary>
    <releaseNotes>
        Notes:

        Version 1.0.0:
            - HubModule.init(hubName): create a singleton hub with the given name or enhance a hub created by SignalR's autogenerated proxies.
            - hub.connect(): same as hub.start
            - hub.disconnect(async, notifyServer): same as hub.stop
            - hub.bindEvent(eventName, callback): same as hub.on
            - hub.unbindEvent(eventName, callback): same as hub.off
            - hub.rpc: replaces hub.server for making calls to the back end. Sends any queued requests along with the current request.
            - hub.queue.rpc: same as hub.rpc, but queues up calls to the server rather than immediately requesting them.
            - hub.flushRequests(cb): Send all queued requests to the server, then execute the callback once all requests has been completed. Will open a connection if necessary, and close the connection afterwards if it was closed when the flush began.
            - hub.addRPC(name, nameOnServer[, argumentNames, ...]): Creates a new rpc call with the provided name, name of the function on the server, and the names of the arguments. Calls to that function will verify that the number of arguments match.
    </releaseNotes>
    <dependencies>
    </dependencies>
    <copyright>Copyright 2014</copyright>
    <tags>SignalR</tags>
  </metadata>
  <files>
    <file src="..\lib\nuget\CallR.JS\*.*" target="Content\Scripts" />
  </files>
</package>
