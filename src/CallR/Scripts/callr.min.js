/*!
* callr JavaScript Library v1.0.5
* https://github.com/tejacques/callr
*
* Distributed in whole under the terms of the MIT License (MIT)
*
* Copyright 2014, Tom Jacques
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
var hubModule=function(){"use strict";function i(n){n.charAt(0).toUpperCase()+n.slice(1)}var t={nojQuery:"jQuery was not found. Please ensure jQuery is referenced before the CallR client JavaScript file.",noSignalR:"SignalR was not found. Please ensure SignalR is referenced before the CallR client JavaScript file."},n=window.jQuery,r;if(typeof n!="function")throw new Error(t.nojQuery);if(typeof n.signalR!="function")throw new Error(t.noSignalR);return r=function(t){function h(t){var i=n.Deferred();return f.push([t,i]),i.promise()}function c(n){return r.flushRequests(),n}function o(n,t){return function(){var r=[].slice.call(arguments),u=function(){return n.apply(this,r)},i=h(u);return t?i:c(i)}}function s(n,t){r.rpc[n]=o(t);r.queue.rpc[n]=o(t,!0)}var u=n.connection.hub,r=n.connection[t],f,e;if(typeof u.state=="undefined"&&(u=n.hubConnection(),n.connection.hub=u),typeof r=="undefined"&&(r=u.createHubProxy(t),n.connection[t]=r),r.callR)return r;r.callR=!0;r.bindEvent=r.on;r.unbindEvent=r.off;r.bindEvent("connected");r.connect=function(n,t){return u.start(n,t)};r.disconnect=function(n,t){return u.stop(n,t)};f=[];r.flushRequests=function(t){function s(n,t){n().done(function(n){t&&t.resolve(n)}).fail(function(n){t&&t.reject(n)}).always(function(){o()})}var i=f.length,e,o;if(i===0){r.connection.log("No requests to flush");typeof t=="function"&&t();return}r.connection.log("Flushing request queue");e=!1;u.state===n.signalR.connectionState.disconnected&&(e=!0);o=function(){i--;i===0&&(r.connection.log("Finished flushing request queue"),e&&r.disconnect(),typeof t=="function"&&t())};r.connect().then(function(){for(var t=f.length,n=0;n<t;n++)s(f[n][0],f[n][1]);f=[]})};r.rpc=function(n){if(!n.name)throw Error("No function name provided.");n.nameOnServer||(n.nameOnServer=i(n.name))};r.queue={rpc:o(r.rpc,!0)};r.addRPC=function(t,u){function f(){var t=[].slice.call(arguments);return r.invoke.apply(r,n.merge([u],t))}if(typeof t=="undefined")throw new Error("addRPC requires a name");return typeof u=="undefined"&&(u=i(t)),s(t,f),this};for(e in r.server)r.server.hasOwnProperty(e)&&s(e,r.server[e]);return r},n.callR={init:r},n.callR}();
/*
//# sourceMappingURL=callr.min.js.map
*/